<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hananoq.dao.UserDao">
    <resultMap id="BaseResultMap" type="com.hananoq.domain.User">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="money" jdbcType="DOUBLE" property="money"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="perms" jdbcType="VARCHAR" property="perms"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, username, password, phone, money, address, perms
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="findByUsernameAndPassword" resultType="com.hananoq.domain.User" parameterType="com.hananoq.domain.User">
        select *
        from user
        where username = #{username}
          and password = #{password};
    </select>
    <select id="findByUsername" resultType="com.hananoq.domain.User">
        select *
        from user
        where username = #{username};
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.hananoq.domain.User" useGeneratedKeys="true">
        insert into user (username, password, phone,
                          money, address, perms)
        values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{money,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR}, #{perms,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.hananoq.domain.User"
            useGeneratedKeys="true">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null">
                username,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="perms != null">
                perms,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=DOUBLE},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                #{perms,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hananoq.domain.User">
        update user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=DOUBLE},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="perms != null">
                perms = #{perms,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hananoq.domain.User">
        update user
        set username = #{username,jdbcType=VARCHAR},
            password = #{password,jdbcType=VARCHAR},
            phone    = #{phone,jdbcType=VARCHAR},
            money    = #{money,jdbcType=DOUBLE},
            address  = #{address,jdbcType=VARCHAR},
            perms    = #{perms,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="update" parameterType="com.hananoq.domain.User">
        update user
        set username=#{username},
            phone=#{phone},
            address=#{address}
        where id = #{id};
    </update>
    <update id="updatePassword">
        update user
        set password = #{password}
        where id = #{userId};
    </update>
</mapper>